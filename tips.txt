
散乱知识点记录

// $("父级").on("click",".chose-close",function(){}）可以解决append动态添加的元素无法用click()绑定事件

//-webkit-tap-highlight-color  (css3属性)
这个属性只用于iOS (iPhone和iPad)。当你点击一个链接或者通过Javascript定义的可点击元素的时候，它就会出现一个半透明的灰色背景。要重设这个表现，你可以设置-webkit-tap-highlight-color为任何颜色。
想要禁用这个高亮，设置颜色的alpha值为0即可。-webkit-tap-highlight-color: rgba(box-link0, 0, 0, 0);
示例：设置高亮色为50%透明的红色:
-webkit-tap-highlight-color: rgba(255,0,0,0.5);
浏览器支持: 只有iOS(iPhone和iPad).

//vh，vw相对于视口(viewport)的高度 宽度。视口被均分为100单位的vh vw。“视口”所指为浏览器内部的可视区域大小，即window.innerWidth/window.innerHeight大小
eg:h1 {	font-size: 8vh;} 如果视口的高度是200mm，那么上述代码中h1元素的字号将为16mm，即(8x200)/100

//css3中-webkit-text-size-adjust详解：      
1、当样式表里font-size<12px时，中文版chrome浏览器里字体显示仍为12px，这时可以用 html{-webkit-text-size-adjust:none;}
2、-webkit-text-size-adjust放在body上会导致页面缩放失效
3、body会继承定义在html的样式
4、用-webkit-text-size-adjust不要定义成可继承的或全局的

// -webkit-appearance: none;   //消除输入框和按钮的原生外观，在iOS上加上这个属性才能给按钮和输入框自定义样式 。   注意：不同type的input使用这个属性之后表现不一。text、button无样式，radio、checkbox直接消失
一般下列一起使用：
{-webkit-appearance: none;
appearance: none;
outline: none;}

//关于placeholder 
文字效果设置
[placeholder]:focus::-webkit-input-placeholder {
	transition: all .3s linear;
	transform: translate(20px, 0);
	opacity: 0
}
文字颜色
::-moz-placeholder { color: #b7bace; }
::-webkit-input-placeholder { color: #b7bace; }
:-ms-input-placeholder { color: #b7bace; }

//-webkit-user-select   -webkit-user-select: none; // 禁止页面文字选择 ，此属性不继承，一般加在body上规定整个body的文字都不会自动调整

//-webkit-touch-callout   -webkit-touch-callout:none;  // 禁用长按页面时的弹出菜单(iOS下有效) ,img和a标签都要加

//<meta name="format-detection" content="telephone=no">  禁止了把数字转化为拨号链接
<meta name="format-detection" content="email=no"> 告诉设备不识别邮箱，点击之后不自动发送 email=no禁止作为邮箱地址！
<meta name="format-detection" content="address=no;"> adress=no禁止跳转至地图！
<meta name="apple-mobile-web-app-capable" content="no"> 这meta的作用就是删除默认的苹果工具栏和菜单栏。
content有两个值”yes”和”no”,当我们需要显示工具栏和菜单栏时，这个行meta就不用加了，默认就是显示。
<meta name="apple-mobile-web-app-status-bar-style" content="default"> 控制状态栏(设备顶部时间 电量等的横条)显示样式

//word-wrap: break-word 单词折断换行   word-wrap: break-all 字母折断

//背景色渐变（注意编写顺序）
background: -webkit-linear-gradient(#3eb3d6, #2d495e); /* Safari 5.1 - 6.0 */
background: -o-linear-gradient(#3eb3d6, #2d495e); /* Opera 11.1 - 12.0 */
background: -moz-linear-gradient(#3eb3d6, #2d495e); /* Firefox 3.6 - 15 */
background: linear-gradient(#3eb3d6, #2d495e); /* 标准的语法 */

//【jQuery 区别】.click()和$(document).on("click","指定的元素",function(){});的区别:
.click只能为页面现有的元素绑定点击事件，如果是动态生成的新的元素，是没有事件的  
而$(document).on("click","指定的元素",function(){});方法则是将指定的事件绑定在document上，而新产生的元素如果符合指定的元素，那就触发此事件 

// 各类事件详细说明：
①移动设备上的触摸事件：onTouchCancel、onTouchEnd、onTouchMove、onTouchStart 
②键盘类事件：onKeyDown、onKeyPress、onKeyUp
③剪切类事件：onCopy、onCut、onPaste 
④表单类：onChange//内容变化即触发、onInput//输入框、onSubmit//禁止表单默认跳转行为
⑤事件：onFocus、onBlur 
⑥UI元素类：onScroll
⑦鼠标滚动事件：onWheel
⑧鼠标类型：onClick、onContextMenu//右键菜单、onDoubleClick //双击、onMouseDown、onMouseEnter、onMouseLeave、onMouseMove、onMouseOut、onMouseOver、onMouseUp
⑨拖拽事件：onDrop、onDrag、onDragEnd、onDragEnter、onDragExit、onDragLeave、onDragOver、onDragStart

// 查看页面dom数量
alert(document.getElementsByTagName('*').length)



 